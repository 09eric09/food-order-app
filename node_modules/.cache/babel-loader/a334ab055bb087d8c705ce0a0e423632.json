{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Desktop/food-order-app/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet cartInitial = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {}\n\n  return cartInitial;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, cartInitial);\n\n  const addItemToCartHandler = item => {\n    dispatchCart({\n      type: 'ADD',\n      item: item\n    });\n  };\n\n  const removeItemFromCartHandler = item => {}; //Default state values we pass into the CartContext.Provider\n\n\n  const cartProviderValue = {\n    items: cartInitial.items,\n    totalAmount: cartInitial.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return (\n    /*#__PURE__*/\n    //Creating this here instead of managing context in App.js\n    _jsxDEV(CartContext.Provider, {\n      value: cartProviderValue,\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(CartProvider, \"unzSBq5yOSEj2AjmJrMUOS3cHh4=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","cartInitial","items","totalAmount","cartReducer","state","action","type","CartProvider","props","cartState","dispatchCart","addItemToCartHandler","item","removeItemFromCartHandler","cartProviderValue","addItem","removeItem","children"],"sources":["/Users/eric/Desktop/food-order-app/src/store/CartProvider.js"],"sourcesContent":["import React, {useReducer} from 'react';\nimport CartContext from './cart-context';\n\nlet cartInitial = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    \n  }\n  return cartInitial;\n}\n\nconst CartProvider = (props) => {\n\n  const [cartState, dispatchCart] = useReducer(cartReducer, cartInitial);\n\n  const addItemToCartHandler = (item) => {\n    dispatchCart({type:'ADD', item:item});\n  }\n\n  const removeItemFromCartHandler = (item) => {\n    \n  }\n\n  //Default state values we pass into the CartContext.Provider\n    const cartProviderValue = {\n        items: cartInitial.items,\n        totalAmount: cartInitial.totalAmount,\n        addItem: addItemToCartHandler, \n        removeItem: removeItemFromCartHandler,\n    };\n\n  return (\n    //Creating this here instead of managing context in App.js\n    <CartContext.Provider value={cartProviderValue}>\n        {props.children}\n    </CartContext.Provider>\n  )\n}\n\nexport default CartProvider;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;AAEA,IAAIC,WAAW,GAAG;EAChBC,KAAK,EAAE,EADS;EAEhBC,WAAW,EAAE;AAFG,CAAlB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACrC,IAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B,CAE1B;;EACD,OAAON,WAAP;AACD,CALD;;AAOA,MAAMO,YAAY,GAAIC,KAAD,IAAW;EAAA;;EAE9B,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BZ,UAAU,CAACK,WAAD,EAAcH,WAAd,CAA5C;;EAEA,MAAMW,oBAAoB,GAAIC,IAAD,IAAU;IACrCF,YAAY,CAAC;MAACJ,IAAI,EAAC,KAAN;MAAaM,IAAI,EAACA;IAAlB,CAAD,CAAZ;EACD,CAFD;;EAIA,MAAMC,yBAAyB,GAAID,IAAD,IAAU,CAE3C,CAFD,CAR8B,CAY9B;;;EACE,MAAME,iBAAiB,GAAG;IACtBb,KAAK,EAAED,WAAW,CAACC,KADG;IAEtBC,WAAW,EAAEF,WAAW,CAACE,WAFH;IAGtBa,OAAO,EAAEJ,oBAHa;IAItBK,UAAU,EAAEH;EAJU,CAA1B;EAOF;IAAA;IACE;IACA,QAAC,WAAD,CAAa,QAAb;MAAsB,KAAK,EAAEC,iBAA7B;MAAA,UACKN,KAAK,CAACS;IADX;MAAA;MAAA;MAAA;IAAA;EAFF;AAMD,CA1BD;;GAAMV,Y;;KAAAA,Y;AA4BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}